@namespace TimeTracker.Components
@inject MonthNavigationViewModel ViewModel
@using System.Reflection
@using TimeTracker.ViewModels
@implements IDisposable

<div class="row mb-4">
    <div class="col">
        <button class="btn btn-secondary me-2" @onclick="ViewModel.PrevMonthClicked">« Föregående</button>
        <strong>@ViewModel.MonthName @ViewModel.Year</strong>
        <button class="btn btn-secondary ms-2" @onclick="ViewModel.NextMonthClicked">Nästa »</button>
    </div>
</div>

@code {
    [Parameter] public int Year { get; set; }
    [Parameter] public int Month { get; set; }
    [Parameter] public EventCallback<(int Year, int Month)> OnNavigate { get; set; }
    
    protected override void OnInitialized()
    {
        ViewModel.StateChanged += StateHasChanged;
        ViewModel.NavigationRequested += async date => await OnNavigate.InvokeAsync(date);
    }
    
    protected override void OnParametersSet()
    {
        ViewModel.Year = Year;
        ViewModel.Month = Month;
    }
    
    public void Dispose()
    {
        ViewModel.StateChanged -= StateHasChanged;
        
        var type = ViewModel.GetType();
        var events = type.GetEvents();
        
        foreach (var eventInfo in events)
        {
            var field = type.GetField(eventInfo.Name, 
                BindingFlags.NonPublic | 
                BindingFlags.Instance);
            
            if (field != null)
            {
                field.SetValue(ViewModel, null);
            }
        }
    }
}