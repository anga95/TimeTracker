// Src/Components/Toast.razor
@using TimeTracker.Services
@implements IDisposable

<div class="toast-container position-fixed top-0 end-0 p-3">
    @foreach (var toast in _toasts)
    {
        <div class="toast show @GetToastClass(toast.Severity)" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">@GetToastTitle(toast.Severity)</strong>
                <button type="button" class="btn-close" @onclick="() => RemoveToast(toast)"></button>
            </div>
            <div class="toast-body">
                @toast.Message
            </div>
        </div>
    }
</div>

@code {
    private class ToastMessage
    {
        public string Message { get; set; }
        public ErrorSeverity Severity { get; set; }
        public DateTime TimeStamp { get; set; } = DateTime.Now;
    }
    
    [Inject] private IErrorHandlingService? ErrorHandler { get; set; }
    
    private List<ToastMessage> _toasts = new();
    
    protected override void OnInitialized()
    {
        ErrorHandler.OnError += ShowToast;
    }
    
    private void ShowToast(string message, ErrorSeverity severity)
    {
        _toasts.Add(new ToastMessage 
        { 
            Message = message, 
            Severity = severity
        });
        
        InvokeAsync(StateHasChanged);
        
        // Automatiskt ta bort meddelandet efter 5 sekunder
        _ = Task.Delay(5000).ContinueWith(_ => 
        {
            if (_toasts.Count > 0)
            {
                _toasts.RemoveAt(0);
                InvokeAsync(StateHasChanged);
            }
        });
    }
    
    private void RemoveToast(ToastMessage toast)
    {
        _toasts.Remove(toast);
        StateHasChanged();
    }
    
    private string GetToastClass(ErrorSeverity severity) => severity switch
    {
        ErrorSeverity.Information => "bg-info",
        ErrorSeverity.Warning => "bg-warning",
        ErrorSeverity.Error => "bg-danger",
        ErrorSeverity.Critical => "bg-danger border-dark",
        _ => "bg-light"
    };
    
    private string GetToastTitle(ErrorSeverity severity) => severity switch
    {
        ErrorSeverity.Information => "Information",
        ErrorSeverity.Warning => "Varning",
        ErrorSeverity.Error => "Fel",
        ErrorSeverity.Critical => "Kritiskt fel",
        _ => "Meddelande"
    };
    
    public void Dispose()
    {
        ErrorHandler.OnError -= ShowToast;
    }
}